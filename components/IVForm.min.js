'use strict';function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}class IVForm extends React.Component{constructor(a){super(a),_defineProperty(this,"calcIVFlowRate",a=>{let b,c;return a?(c=this.state.volume/("m"==this.state.unit?this.state.time/60:this.state.time),b="ml/hr"):(c=this.state.volume/("h"==this.state.unit?60*this.state.time:this.state.time)*this.state.flow,b="gtts/min"),{rate:parseFloat(c.toFixed(2)),unit:b}}),_defineProperty(this,"handleChecked",a=>{this.setState({checked:a.target.checked},this.calculate)}),_defineProperty(this,"handleChange",a=>{this.setState({[a.target.id]:a.target.value},this.calculate)}),this.state={flowRate:0,volume:0,time:0,unit:"h",flow:{rate:0,unit:""},checked:!1}}calculate(){console.log("calc");const a=this.calcIVFlowRate(this.state.checked);this.setState({flowRate:isNaN(a.rate)?{rate:0,unit:""}:a})}render(){return React.createElement("div",{id:"container"},React.createElement("div",null,React.createElement("label",{for:"volume"},"Total Volume:"),React.createElement("input",{type:"text",onChange:this.handleChange,pattern:"[0-9]",name:"volume",id:"volume",placeholder:"ml"})),React.createElement("div",null,React.createElement("label",{for:"time"},"Infusion Time:"),React.createElement("div",{id:"time-element"},React.createElement("input",{type:"text",onChange:this.handleChange,pattern:"[0-9]",name:"time",id:"time",placeholder:"0"}),React.createElement("select",{name:"timetype",name:"unit",id:"unit",onChange:this.handleChange,value:this.state.unit},React.createElement("option",{value:"m"},"Minutes"),React.createElement("option",{value:"h"},"Hours")))),React.createElement("div",null,React.createElement("input",{type:"checkbox",name:"pump",id:"pump",onChange:this.handleChecked}),React.createElement("label",{for:"pump"},"Using Pump/Rate Controlled Tubing")),React.createElement("div",null,React.createElement("label",{for:"flow"},"Drop Factor:"),React.createElement("input",{type:"text",onChange:this.handleChange,pattern:"[0-9]",name:"flow",id:"flow",placeholder:"gtts/ml",disabled:this.state.checked})),React.createElement("div",{id:"output",class:"update"},"IV Flow Rate: ",this.state.flowRate.rate," ",this.state.flowRate.unit))}}ReactDOM.render(React.createElement(IVForm,null),document.querySelector("#IVForm"));