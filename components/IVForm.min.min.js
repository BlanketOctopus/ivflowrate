'use strict';function _defineProperty(d,a,b){return a in d?Object.defineProperty(d,a,{value:b,enumerable:!0,configurable:!0,writable:!0}):d[a]=b,d}class IVForm extends React.Component{constructor(b){super(b),_defineProperty(this,"calcIVFlowRate",d=>{let a,e;return d?(e=this.state.volume/("m"==this.state.unit?this.state.time/60:this.state.time),a="ml/hr"):(e=this.state.volume/("h"==this.state.unit?60*this.state.time:this.state.time)*this.state.flow,a="gtts/min"),{rate:parseFloat(e.toFixed(2)),unit:a}}),_defineProperty(this,"handleChecked",b=>{this.setState({checked:b.target.checked},this.calculate)}),_defineProperty(this,"handleChange",b=>{this.setState({[b.target.id]:b.target.value},this.calculate)}),this.state={flowRate:0,volume:0,time:0,unit:"h",flow:{rate:0,unit:""},checked:!1}}calculate(){console.log("calc");const b=this.calcIVFlowRate(this.state.checked);this.setState({flowRate:isNaN(b.rate)?{rate:0,unit:""}:b})}render(){return React.createElement("div",{id:"container"},React.createElement("div",null,React.createElement("label",{for:"volume"},"Total Volume:"),React.createElement("input",{type:"text",onChange:this.handleChange,pattern:"[0-9]",name:"volume",id:"volume",placeholder:"ml"})),React.createElement("div",null,React.createElement("label",{for:"time"},"Infusion Time:"),React.createElement("div",{id:"time-element"},React.createElement("input",{type:"text",onChange:this.handleChange,pattern:"[0-9]",name:"time",id:"time",placeholder:"0"}),React.createElement("select",{name:"timetype",name:"unit",id:"unit",onChange:this.handleChange,value:this.state.unit},React.createElement("option",{value:"m"},"Minutes"),React.createElement("option",{value:"h"},"Hours")))),React.createElement("div",null,React.createElement("input",{type:"checkbox",name:"pump",id:"pump",onChange:this.handleChecked}),React.createElement("label",{for:"pump"},"Using Pump/Rate Controlled Tubing")),React.createElement("div",null,React.createElement("label",{for:"flow"},"Drop Factor:"),React.createElement("input",{type:"text",onChange:this.handleChange,pattern:"[0-9]",name:"flow",id:"flow",placeholder:"gtts/ml",disabled:this.state.checked})),React.createElement("div",{id:"output",class:"update"},"IV Flow Rate: ",this.state.flowRate.rate," ",this.state.flowRate.unit))}}ReactDOM.render(React.createElement(IVForm,null),document.querySelector("#IVForm"));